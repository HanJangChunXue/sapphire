<!-- 
 ******************************************************************************
 * Copyright (c) 2015 Oracle
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Konstantin Komissarchik - initial implementation and ongoing maintenance
 ******************************************************************************
-->

<definition>

    <import>
        <package>org.eclipse.sapphire.sdk.internal</package>
        <package>org.eclipse.sapphire.sdk.extensibility</package>
        <package>org.eclipse.sapphire.ui.forms.swt</package>
        <definition>org.eclipse.sapphire.sdk.Common</definition>
    </import>

    <editor-page>
        <id>main</id>
        <page-header-text>Sapphire Extension</page-header-text>
        <initial-selection>Model Element Services</initial-selection>
        <root-node>
            <node>
                <label>services</label>
                <section>
                    <description>Define services.</description>
                    <content>
                        <actuator>
                            <action-id>Sapphire.Add</action-id>
                            <label>add a service</label>
                        </actuator>
                    </content>
                </section>
                <node-factory>
                    <property>Services</property>
                    <case>
                        <label>${ Id == null ? &quot;&lt;service&gt;&quot; : Id }</label>
                        <section>
                            <label>service</label>
                            <content>
                                <property-editor>Id</property-editor>
                                <property-editor>Implementation</property-editor>
                                <property-editor>
                                    <property>Description</property>
                                    <height>75</height>
                                </property-editor>
                                <property-editor>Condition</property-editor>
                                <property-editor>
                                    <hint>
                                        <name>factory</name>
                                        <value>CheckBoxListPropertyEditorPresentation$Factory</value>
                                    </hint>
                                    <property>Contexts</property>
                                    <hint>
                                        <name>show.header</name>
                                        <value>false</value>
                                    </hint>
                                </property-editor>
                                <property-editor>
                                    <hint>
                                        <name>show.header</name>
                                        <value>false</value>
                                    </hint>
                                    <property>Overrides</property>
                                </property-editor>
                            </content>
                        </section>
                        <image>${ Image() }</image>
                    </case>
                </node-factory>
                <image>org/eclipse/sapphire/sdk/extensibility/ServiceDef.png</image>
            </node>
            <node>
                <label>functions</label>
                <section>
                    <description>Define expression language functions.</description>
                    <content>
                        <actuator>
                            <action-id>Sapphire.Add</action-id>
                            <label>Add an expression language function</label>
                        </actuator>
                    </content>
                </section>
                <node-factory>
                    <property>Functions</property>
                    <case>
                        <label>${ Name == null ? "&lt;function&gt;" : Name }</label>
                        <section>
                            <label>function</label>
                            <content>
                                <property-editor>Name</property-editor>
                                <property-editor>ImplClass</property-editor>
                                <property-editor>
                                    <property>Description</property>
                                    <height>75</height>
                                </property-editor>
                            </content>
                        </section>
                        <section>
                            <label>signature</label>
                            <content>
                                <with>
                                    <path>Signature</path>
                                    <label>specify function signature</label>
                                    <case>
                                        <content>
                                            <property-editor>
                                                <property>Parameters</property>
                                                <show-label>false</show-label>
                                                <span>true</span>
                                                <hint>
                                                    <name>show.header</name>
                                                    <value>false</value>
                                                </hint>
                                            </property-editor>
                                        </content>
                                    </case>
                                </with>
                            </content>
                            <description>A function can be restricted to apply to a specific parameter signature. If not restricted, the function will apply to any number of parameters of arbitrary type.</description>
                        </section>
                        <image>${ Image() }</image>
                    </case>
                </node-factory>
                <image>org/eclipse/sapphire/sdk/extensibility/FunctionDef.png</image>
            </node>
            <node>
                <label>actions</label>
                <section>
                    <description>Define actions that should be available globally in the system.</description>
                    <content>
                        <actuator>
                            <action-id>Sapphire.Add</action-id>
                            <label>Add an action</label>
                        </actuator>
                    </content>
                </section>
                <node-include>ActionNodeFactory</node-include>
                <image>org/eclipse/sapphire/ui/def/ActionDef.png</image>
            </node>
            <node>
                <label>action handlers</label>
                <section>
                    <description>Define action handlers that should be available globally in the system.</description>
                    <content>
                        <actuator>
                            <action-id>Sapphire.Add</action-id>
                            <label>Add an action handler</label>
                        </actuator>
                    </content>
                </section>
                <node-include>ActionHandlerNodeFactory</node-include>
                <image>org/eclipse/sapphire/ui/def/ActionHandlerDef.png</image>
            </node>
            <node>
                <label>action handler factories</label>
                <section>
                    <content>
                        <actuator>
                            <action-id>Sapphire.Add</action-id>
                            <label>Add an action handler factory</label>
                        </actuator>
                    </content>
                    <description>Define action handler factories that should be available globally in the system.</description>
                </section>
                <node-include>ActionHandlerFactoryNodeFactory</node-include>
                <image>org/eclipse/sapphire/ui/def/ActionHandlerFactoryDef.png</image>
            </node>
            <node>
                <label>presentation styles</label>
                <node-factory>
                    <case>
                        <label>${ Id == null ? &quot;&lt;presentation-style&gt;&quot; : Id }</label>
                        <section>
                            <label>presentation style</label>
                            <content>
                                <property-editor>Id</property-editor>
                                <property-editor>PartType</property-editor>
                                <property-editor>Description</property-editor>
                            </content>
                        </section>
                    </case>
                    <property>PresentationStyles</property>
                </node-factory>
                <section>
                    <content>
                        <label>Define presentation styles. A presentation style is an abstraction that gives the user interface author some influence over how a part is presented without the part type hardcoding the alternatives. Providers of concrete presentations associate their rendering logic with registered presentation styles.</label>
                        <spacer></spacer>
                        <actuator>
                            <label>Add a presentation style</label>
                            <action-id>Sapphire.Add</action-id>
                        </actuator>
                    </content>
                </section>
            </node>
        </root-node>
        <element-type>SapphireExtensionDef</element-type>
    </editor-page>
    
</definition>
